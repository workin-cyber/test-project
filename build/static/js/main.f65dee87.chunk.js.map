{"version":3,"sources":["pages/Login.js","pages/Dashboard.js","pages/MyTests.js","pages/Test.js","pages/TestForm.js","Header.js","App/index.js","index.js"],"names":["LoginContext","createContext","Login","children","loginState","useState","user","setUser","mode","setMode","error","setError","event","a","preventDefault","values","Object","target","reduce","acc","input","name","type","checked","value","console","log","axios","post","res","stay","localStorage","token","data","sessionStorage","response","message","Provider","onSubmit","placeholder","required","style","color","className","onClick","Dashboard","MyTests","Test","TestForm","Header","useContext","to","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGaA,EAAeC,0BAEb,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAEtBC,EAAaC,qBAAb,cACgBD,EADhB,GACDE,EADC,KACKC,EADL,OAEgBF,mBAAS,SAFzB,mBAEDG,EAFC,KAEKC,EAFL,OAGkBJ,mBAAS,IAH3B,mBAGDK,EAHC,KAGMC,EAHN,KAFkC,4CAOxC,WAAqBC,GAArB,qBAAAC,EAAA,6DACID,EAAME,iBAEAC,EAASC,OAAOD,OAAOH,EAAMK,QAC9BC,QAAO,SAACC,EAAKC,GAAN,OAAiBA,EAAMC,KAAP,2BACjBF,GADiB,kBAEnBC,EAAMC,KAAsB,YAAdD,EAAME,KAAqBF,EAAMG,QAAUH,EAAMI,QAF9BL,IAGlC,IAERM,QAAQC,IAAIX,GAThB,kBAY0BY,IAAMC,KAAN,gCAAoCpB,GAAQO,GAZtE,OAYcc,EAZd,OAcYd,EAAOe,KAAMC,aAAaC,MAAQH,EAAII,KAAKD,MAC1CE,eAAeF,MAAQH,EAAII,KAAKD,MAErCzB,EAAQsB,EAAII,MAjBpB,kDAoBQtB,GAAS,eAAEwB,gBAAF,mBAAYF,YAAZ,eAAkBvB,QAAS,KAAE0B,SApB9C,2DAPwC,sBA+BxC,OAAO,cAACpC,EAAaqC,SAAd,CAAuBb,MAAOpB,EAA9B,SAECE,EAAOH,EAAW,gCACd,6BAAKK,IACL,uBAAM8B,SAnCsB,4CAmC5B,UACa,YAAR9B,EAAqB,uBAAO+B,YAAY,YAAYlB,KAAK,OAAOmB,UAAQ,IAAM,GAC/E,uBAAOD,YAAY,QAAQlB,KAAK,QAAQC,KAAK,QAAQkB,UAAQ,IAC7D,uBAAOD,YAAY,WAAWlB,KAAK,WAAWC,KAAK,aACnD,uBAJJ,IAIoB,YAARd,EAAqB,GAAK,kCAAO,uBAAOc,KAAK,WAAWD,KAAK,SAAnC,qBAClC,qBAAKoB,MAAO,CAAEC,MAAO,OAArB,SAAgChC,IAChC,uBAAOY,KAAK,SAASE,MAAM,YAE/B,uBACA,qBAAKmB,UAAU,eAAf,SACY,YAARnC,EACI,uDAAyB,mBAAGoC,QAAS,kBAAMnC,EAAQ,UAA1B,sBACzB,oDAAsB,mBAAGmC,QAAS,kBAAMnC,EAAQ,aAA1B,gCCpD/B,SAASoC,IACpB,OAAO,4CCDI,SAASC,IACpB,OAAO,0CCDI,SAASC,IACpB,OAAO,uCCDI,SAASC,IACpB,OAAO,2C,iBCII,SAASC,IACpB,MAAwBC,qBAAWlD,GAAnC,mBAAOM,EAAP,KAAaC,EAAb,KAEA,OAAO,mCACH,iCAAOD,EAAKe,KAAZ,IAAkB,mBAAGuB,QAAS,kBAAMrC,KAAlB,uBAClB,wCACA,cAAC,IAAD,CAAM4C,GAAG,IAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,yBCWOC,MAdf,WACI,OAAO,qBAAKT,UAAU,MAAf,SACH,eAACzC,EAAD,WACI,cAAC+C,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOI,KAAK,IAAIC,UAAWT,EAAWU,OAAK,IAD/C,IAEI,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWR,IAFvC,IAGI,cAAC,IAAD,CAAOO,KAAK,gBAAgBC,UAAWP,IACvC,cAAC,IAAD,CAAOM,KAAK,sBAAsBC,UAAWN,IAJjD,a,MCPZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.f65dee87.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { createContext, useState } from 'react'\r\n\r\nexport const LoginContext = createContext()\r\n\r\nexport default function Login({ children }) {\r\n\r\n    const loginState = useState(),\r\n        [user, setUser] = loginState,\r\n        [mode, setMode] = useState('login'),//or 'register'\r\n        [error, setError] = useState('')\r\n\r\n    async function login(event) {\r\n        event.preventDefault()\r\n\r\n        const values = Object.values(event.target)\r\n            .reduce((acc, input) => !input.name ? acc : ({\r\n                ...acc,\r\n                [input.name]: (input.type == 'checkbox' ? input.checked : input.value)\r\n            }), {})\r\n\r\n        console.log(values)\r\n\r\n        try {\r\n            const res = await axios.post(`http://localhost:4000/${mode}`, values)\r\n\r\n            if (values.stay) localStorage.token = res.data.token\r\n            else sessionStorage.token = res.data.token\r\n\r\n            setUser(res.data)\r\n        }\r\n        catch (e) {\r\n            setError(e.response?.data?.error || e.message)\r\n        }\r\n    }\r\n\r\n    return <LoginContext.Provider value={loginState}>\r\n        {\r\n            user ? children : <div>\r\n                <h1>{mode}</h1>\r\n                <form onSubmit={login}>\r\n                    {mode == 'register' ? <input placeholder='your name' name='name' required /> : ''}\r\n                    <input placeholder='email' name='email' type='email' required />\r\n                    <input placeholder='password' name='password' type='password' />\r\n                    <br /> {mode == 'register' ? '' : <label><input type='checkbox' name='stay' /> stay logged in</label>}\r\n                    <div style={{ color: 'red' }} >{error}</div>\r\n                    <input type='submit' value='send' />\r\n                </form>\r\n                <br />\r\n                <div className='modeSelector'>{\r\n                    mode == 'register' ?\r\n                        <div>alredy registered?  <b onClick={() => setMode('login')}>login</b></div> :\r\n                        <div>not registered?  <b onClick={() => setMode('register')}>register</b></div>\r\n                }</div>\r\n            </div>\r\n        }\r\n    </LoginContext.Provider>\r\n}","export default function Dashboard() {\r\n    return <div>Dashboard</div>\r\n}","export default function MyTests() {\r\n    return <div>MyTests</div>\r\n}","export default function Test() {\r\n    return <div>Test</div>\r\n}","export default function TestForm() {\r\n    return <div>TestForm</div>\r\n}","import { LoginContext } from \"pages/Login\"\r\nimport { useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport default function Header() {\r\n    const [user, setUser] = useContext(LoginContext)\r\n\r\n    return <header>\r\n        <span>{user.name} <u onClick={() => setUser()}>logout</u></span>\r\n        <span>logo</span>\r\n        <Link to='/'>dashboard</Link>\r\n        <Link to='/my-tests'>my-tests</Link>\r\n    </header>\r\n}","import Login from 'pages/Login'\nimport Dashboard from 'pages/Dashboard'\nimport MyTests from 'pages/MyTests'\nimport Test from 'pages/Test'\nimport TestForm from 'pages/TestForm'\nimport { Route, Switch } from 'react-router-dom'\nimport './app.css'\nimport Header from 'Header'\n\nfunction App() {\n    return <div className='App'>\n        <Login>\n            <Header />\n            <Switch>\n                <Route path='/' component={Dashboard} exact /> {/* created tests */}\n                <Route path='/my-tests' component={MyTests} /> {/* assigned tests */}\n                <Route path='/test/:testId' component={Test} />\n                <Route path='/test-form/:testId?' component={TestForm} /> {/* create/edit test */}\n            </Switch>\n        </Login>\n    </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}